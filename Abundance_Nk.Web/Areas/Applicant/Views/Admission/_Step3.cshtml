@model Abundance_Nk.Web.Areas.Applicant.ViewModels.AdmissionViewModel

@{
    int generatedAcceptanceReceiptStatus = (int)Abundance_Nk.Model.Model.ApplicantStatus.Status.GeneratedAcceptanceInvoice;
}

<h3>@*Generate Acceptance Receipt*@</h3>
<div class="row">
    <div class="col-sm-12">

        <div class="form-group ">

            <div class="col-sm-9 ">
                <div class="form-inline">
                    <div class="form-group">
                        <button class="btn btn-success btn-sm" type="button" name="btnGenerateAcceptanceInvoice" id="btnGenerateAcceptanceInvoice">Generate Acceptance Invoice</button>
                    </div>

                    <div class="form-group margin-bottom-0">
                        <div id="divProcessingAcceptanceInvoice" style="display: none">
                            <img src="@Url.Content("~/Content/Images/bx_loader.gif")" />
                            <span>Processing ...</span>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="form-group  margin-bottom-0 divAcceptanceInvoice" style="display:none">
            <a id="aAcceptanceInvoiceNumber" href="#" target="_blank" class="btn btn-white btn-sm">Print Invoice</a>
        </div>
        <br />
        <div id="divAcceptanceInvoiceResult"></div>

        <div class="well ">

            <div class="form-group ">
                @Html.LabelFor(model => model.AcceptanceInvoiceNumber, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9 text-bold">
                    @Html.DisplayFor(model => model.AcceptanceInvoiceNumber, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group margin-bottom-3 ">
                @Html.LabelFor(model => model.AcceptanceConfirmationOrderNumber, new { @class = "control-label col-sm-3" })
                <div class="col-sm-9 text-bold">
                    @Html.TextBoxFor(model => model.AcceptanceConfirmationOrderNumber, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group ">
                <div class="col-sm-3 "></div>
                <div class="col-sm-9 ">
                    <div class="form-inline">
                        <div class="form-group">
                            <button class="btn btn-success btn-metro mr5" type="button" name="btnGenerateAcceptanceReceipt" id="btnGenerateAcceptanceReceipt" value="Next">Generate Receipt</button>
                        </div>

                        <div class="form-group margin-bottom-0">
                            <div id="divProcessingAcceptanceReceipt" style="display: none">
                                <img src="@Url.Content("~/Content/Images/bx_loader.gif")" />
                                <span>Processing ...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div><hr>

            <div class="form-group">
                <div class="col-sm-12" id="divGenerateAcceptanceReceipt"></div>
            </div>
            @if (Model.AppliedCourse != null && Model.AppliedCourse.Programme != null && (Model.AppliedCourse.Programme.Id == 8 || Model.AppliedCourse.Programme.Id == 9))
            {

            }
            else
            {
                <div class="row">
                    <div class="col-md-12 pl-2">
                        <button class="btn btn-success btn-metro ml-3 divHostelRequest d-inline-block" type="button" name="btnHostelRequest" id="btnHostelRequest">Hostel Request</button>

                        @*@Html.DisplayFor(model => model.HostelInvoiceNumber, new { @class = "form-control", @readonly = "readonly" })*@

                        <button class="btn btn-success btn-sm d-inline-block" type="button" name="btnGenerateHostelInvoice" id="btnGenerateHostelInvoice">Generate Hostel Invoice</button>

                        <a id="aHostelInvoiceNumber" href="#" target="_blank" class="btn btn-white btn-sm d-inline-block divHostelInvoice " style="display:none">Print Hostel Invoice</a>

                        @*&nbsp;&nbsp; @Html.ActionLink("Generate Hostel Invoice", "GenerateHostelInvoice", new { AcceptanceRRR = Model.AcceptanceConfirmationOrderNumber }, new { @class = "btn btn-white btn-sm mr-2 divHostelInvoice", target = "_blank", id = "alPrintHostelInvoice" })*@
                    </div>
                </div>
            }


            <hr>
            @if (Model.AppliedCourse != null && Model.AppliedCourse.Programme != null && (Model.AppliedCourse.Programme.Id == 8 || Model.AppliedCourse.Programme.Id == 9))
            {
                //do nothing
            }
            else
            {
                <div class="row">
                    <div class="col-md-12  divHostelReceipt">
                        <div class="row">
                            <div class="col-md-4">

                                <div class="form-group ">
                                    @Html.LabelFor(model => model.HostelInvoiceNumber, new { @class = "control-label col-sm-6" })
                                    <div class="col-sm-6 text-bold">
                                        @Html.TextBoxFor(model => model.HostelInvoiceNumber, new { @class = "form-control", @readonly = "readonly", @id = "HostelInvoiceNumber" })
                                    </div>
                                </div>

                            </div>

                            <div class="col-md-8 ">

                                @Html.LabelFor(model => model.HostelConfirmationOrderNumber, new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8 text-bold">
                                    @Html.TextBoxFor(model => model.HostelConfirmationOrderNumber, new { @class = "form-control" })
                                </div>    <br>
                                <button class="btn btn-success btn-metro mr5" type="button" name="btnGenerateHostelReceipt" id="btnGenerateHostelReceipt" value="Next">Generate Hostel Receipt</button>
                                <div id="divProcessingHostelReceipt" style="display: none">
                                    <img src="@Url.Content("~/Content/Images/bx_loader.gif")" />
                                    <span>Processing ...</span>
                                </div>

                                <a id="alPrintHostelReceipt" href="#" target="_blank" class="btn btn-white btn-sm d-inline-block divHostelReceipt " style="display:none">Print Hostel Receipt</a>


                            </div>

                        </div>

                    </div>
                </div>

            }

        </div>
    </div>

</div>

<div class="form-inline divAcceptanceReceipt" style="display:none">
    <div class="form-group ">
        @if (Model.AppliedCourse != null && Model.AppliedCourse.Programme != null && (Model.AppliedCourse.Programme.Id == 8 || Model.AppliedCourse.Programme.Id == 9))
        {
            @Html.ActionLink("Print Admission Letter.", "ODFELAdmissionLetter", "Credential", new { Area = "Common", fid = Abundance_Nk.Web.Models.Utility.Encrypt(Model.ApplicationForm.Id.ToString()) }, new { @class = "btn btn-white btn-sm mr-2", target = "_blank", id = "alPrintAcceptanceReceipt" })
        }
        else
        {
            @Html.ActionLink("Print Admission Letter", "AdmissionLetter", "Credential", new { Area = "Common", fid = Abundance_Nk.Web.Models.Utility.Encrypt(Model.ApplicationForm.Id.ToString()) }, new { @class = "btn btn-white btn-sm mr-2", target = "_blank", id = "alPrintAcceptanceReceipt" })
        }



        &nbsp; &nbsp; @Html.ActionLink("Print Receipt", "Receipt", new { ivn = Model.AcceptanceInvoiceNumber, fid = Model.ApplicationForm.Id, st = generatedAcceptanceReceiptStatus }, new { @class = "btn btn-white btn-sm mr-2 ", target = "_blank", id = "alPrintAcceptanceReceipt" })
        &nbsp; &nbsp; <button class="btn btn-white btn-sm " type="button" name="btnAcceptanceReceiptNext" id="btnAcceptanceReceiptNext">Next Step</button>
    </div>
</div>


@*@model Abundance_Nk.Web.Areas.Applicant.ViewModels.AdmissionViewModel
    <br />
    <div id="divRejectReason" style="margin-bottom:15px; text-align:justify; display:none">
        <blockquote>
            <p style="color:red; font-weight:bold">
                We regret to inform you that you did not qualify for admission into the above programme and department due to following reason:
            </p>
            <small>@Model.ApplicationForm.RejectReason<cite title="Source Title"></cite></small>
        </blockquote>
    </div>

    <h3>Verify/Modify Your O-Level Result</h3>
    <div class="row ">
        <div class="col-md-12 ">
                <div class="col-md-12 shadow">
                    <div class="col-md-1 "></div>
                    <div class="col-md-10 ">
    @using (Html.BeginForm("VerifyOlevelResult", "Admission", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.ApplicantStatusId)
        @Html.HiddenFor(m => m.AppliedCourse.Programme.Id)
        @Html.HiddenFor(m => m.ApplicationForm.Id)
        @Html.HiddenFor(m => m.ApplicationForm.Person.Id)
        @Html.HiddenFor(m => m.ApplicationForm.RejectReason)
        @Html.HiddenFor(m => m.ApplicationForm.Rejected)
        @Html.HiddenFor(m => m.ApplicationForm.Number)

                        <div class="row" id="divOLevel">
                            <div class="col-md-6">
                                <h5><b>First Sitting</b></h5>
                                <hr class="no-top-padding" />
                                @Html.HiddenFor(model => model.FirstSittingOLevelResult.Id)
                                <div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FirstSittingOLevelResult.Type.Id, "Type", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model => model.FirstSittingOLevelResult.Type.Id, (IEnumerable<SelectListItem>)ViewBag.FirstSittingOLevelTypeId, new { @class = "form-control olevel" })
                                            @Html.ValidationMessageFor(model => model.FirstSittingOLevelResult.Type.Id)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FirstSittingOLevelResult.ExamNumber, new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(model => model.FirstSittingOLevelResult.ExamNumber, new { @class = "form-control olevel" })
                                            @Html.ValidationMessageFor(model => model.FirstSittingOLevelResult.ExamNumber)
                                        </div>
                                    </div>

                                    <div class="form-group ">
                                        @Html.LabelFor(model => model.FirstSittingOLevelResult.ExamYear, new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model => model.FirstSittingOLevelResult.ExamYear, (IEnumerable<SelectListItem>)ViewBag.FirstSittingExamYearId, new { @class = "form-control olevel" })
                                            @Html.ValidationMessageFor(model => model.FirstSittingOLevelResult.ExamYear)
                                        </div>
                                    </div>
                                </div>

                                <table class="table table-condensed table-responsive" style="background-color:whitesmoke">
                                    <tr>
                                        <th>
                                            Subject
                                        </th>
                                        <th>
                                            Grade
                                        </th>
                                        <th></th>
                                    </tr>

                                    @for (int i = 0; i < 9; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DropDownListFor(model => model.FirstSittingOLevelResultDetails[i].Subject.Id, (IEnumerable<SelectListItem>)ViewData["FirstSittingOLevelSubjectId" + i], new { @class = "form-control olevel" })
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(model => model.FirstSittingOLevelResultDetails[i].Grade.Id, (IEnumerable<SelectListItem>)ViewData["FirstSittingOLevelGradeId" + i], new { @class = "form-control olevel" })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>

                            <div class="col-md-6">
                                <h5><b>Second Sitting</b></h5>
                                <hr class="no-top-padding" />

                                @Html.HiddenFor(model => model.SecondSittingOLevelResult.Id)

                                <div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SecondSittingOLevelResult.Type.Id, "Type", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model => model.SecondSittingOLevelResult.Type.Id, (IEnumerable<SelectListItem>)ViewBag.SecondSittingOLevelTypeId, new { @class = "form-control olevel" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SecondSittingOLevelResult.ExamNumber, new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(model => model.SecondSittingOLevelResult.ExamNumber, new { @class = "form-control olevel" })
                                        </div>
                                    </div>

                                    <div class="form-group ">
                                        @Html.LabelFor(model => model.SecondSittingOLevelResult.ExamYear, new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(model => model.SecondSittingOLevelResult.ExamYear, (IEnumerable<SelectListItem>)ViewBag.SecondSittingExamYearId, new { @class = "form-control olevel" })
                                        </div>
                                    </div>
                                </div>

                                <table class="table table-condensed table-responsive" style="background-color:whitesmoke">
                                    <tr>
                                        <th>
                                            Subject
                                        </th>
                                        <th>
                                            Grade
                                        </th>
                                        <th></th>
                                    </tr>

                                    @for (int i = 0; i < 9; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DropDownListFor(model => model.SecondSittingOLevelResultDetails[i].Subject.Id, (IEnumerable<SelectListItem>)ViewData["SecondSittingOLevelSubjectId" + i], new { @class = "form-control olevel" })
                                            </td>
                                            <td>
                                                @Html.DropDownListFor(model => model.SecondSittingOLevelResultDetails[i].Grade.Id, (IEnumerable<SelectListItem>)ViewData["SecondSittingOLevelGradeId" + i], new { @class = "form-control olevel" })
                                            </td>
                                        </tr>
                                    }

                                </table>
                            </div>
                        </div>

                        <br />
                        <hr />
                        <div class="form-inline">
                            <div class="form-group margin-bottom-0">
                                <input class="btn btn-success btn-lg mr5 " type="submit" name="submit" id="submit"/>

                            </div>

                            <div class="form-group" style="display:none">
                                <button class="btn btn-white btn-lg" type="button" name="btnVerifyOlevelNext" id="btnVerifyOlevelNext"/>Next Step<button>
                            </div>
                        </div>
                        <br />
                        <div id="divVerifyOlevelResultData"></div>

    }
                    </div>
                    <div class="col-md-1"></div>
                </div>

        </div>
    </div>*@
