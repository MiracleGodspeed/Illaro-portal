@model Abundance_Nk.Web.Areas.Admin.ViewModels.HostelViewModel
@{
    ViewBag.Title = "ViewAllocationRequest";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}




@section Scripts {
    @*@Scripts.Render("~/bundles/jquery")

<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert.min.js"></script>*@
@*<link href="~/Content/NewScript/css/sb-admin-2.min.css" rel="stylesheet" />*@
@*<script src="~/Content/NewScript/vendor/jquery/jquery.min.js"></script>
<script src="~/Content/NewScript/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/Content/NewScript/vendor/jquery-easing/jquery.easing.min.js"></script>
<script src="~/Content/NewScript/js/sb-admin-2.min.js"></script>*@


<link href="~/Scripts/DataTables-1.10.15/media/css/jquery.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/media/js/jquery.dataTables.js"></script>
<link href="~/Scripts/DataTables-1.10.15/extensions/Buttons/css/buttons.dataTables.css" rel="stylesheet" />
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/dataTables.buttons.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Buttons/js/buttons.colVis.js"></script>
<script src="~/Scripts/DataTables-1.10.15/extensions/Responsive/js/dataTables.responsive.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.flash.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.html5.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/buttons.print.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/jszip.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/pdfmake.min.js"></script>
<script src="~/Scripts/DataTables-1.10.15/vfs_fonts.js"></script>


    <script type="text/javascript">


        $(document).ready(function () {
            $.extend($.fn.dataTable.defaults, {
                responsive: false
            });

            $("#requestTable").DataTable({
                dom: 'Bfrtip',
                ordering: true,
                buttons: [
                    {
                        extend: 'copy',
                        exportOptions: {
                            columns: ':visible',
                            modifier: {
                                orientation: 'landscape'
                            }
                        },
                        orientation: 'landscape'


                    },
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: ':visible',
                            modifier: {
                                orientation: 'landscape'
                            }
                        },
                        orientation: 'landscape'

                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: ':visible',
                            modifier: {
                                orientation: 'landscape'
                            }
                        },
                        orientation: 'landscape'


                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: ':visible',
                            header: true,
                            modifier: {
                                orientation: 'landscape'
                            }



                        },
                        orientation: 'landscape'


                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':visible',
                            modifier: {
                                orientation: 'landscape'
                            }
                        },
                        orientation: 'landscape'


                    }, , 'colvis'
                ]
            });
        })


        //$(document).ready(function() {
        //    $('#requestTable').DataTable();
        //});

        @*function ActivateAll() {
            if ($('#ActivateAllId').is(':checked')) {
                $('.Activate').prop('checked', true);
            } else {
                $('.Activate').prop('checked', false);
            }
        }

        function approveRequest(id) {

            var level = ("#level").val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ApproveSingleHostelRequest", "HostelAllocation")', // we are calling json method
                dataType: 'json',
                data: { requestId: id, levelId : level },
                success: function (result) {
                    if (result.IsError === false) {
                        swal("Good job!", "Hostel request was approved!", "success");
                    } else {
                        swal("Failed!", result.Message, "error");
                    }
                },
                error: function(ex) {
                    swal("Error!", ex, "error");
                }
            });
        }*@

     

        function updateStatus(id) {
            var level = $("#level").val();

            if (!id) {
                showNotification("Invalid id.", "warning", "Attention!");
                return;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ApproveSingleHostelRequest", "HostelAllocation")',
                dataType: 'json',
                beforeSend: function () { $("#checkProgress").show() },
                data: { requestId: id, levelId: level, status: event.target.checked },
                success: function (result) {
                    if (result.IsError === false) {
                        showNotification(result.Message, "success", "Success!");
                    } else {
                        showNotification(result.Message, "warning", "Attention!");
                    }

                    $("#checkProgress").hide();
                },
                error: function (jqXHR) {
                    showNotification(jqXHR.statusText, "warning", "Attention!");
                    $("#checkProgress").hide();
                }
            });

            return;
        }

        function showNotification(msg, type, title) {
            $.toast({
                heading: title,
                text: msg,
                position: 'top-right',
                loaderBg: '#ff6849',
                icon: type,
                hideAfter: 6500,
                stack: 6
            });
        }

        function showLoading() {
            $("#btnSubmit").hide();
            $("#btnLoading").show();
        }
        function showSaveLoading() {
            $("#btnSave").hide();
            $("#btnSaveProgress").show();
        }

        function checkAll() {
            if ($('#check_all').is(':checked')) {
                $('.checkbox').prop('checked', true);
            } else {
                $('.checkbox').prop('checked', false);
            }
        }

        function updateSelected() {
            
            var level = $("#level").val();

            $("#btnSubmit").hide();
            $("#btnSave").hide();

            $("#btnLoading").show();
            $("#btnSaveProgress").show();
            $("#checkProgress").show();

            $(".checkbox").map((index, currentItem) => {
                var item = currentItem;
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ApproveSingleHostelRequest", "HostelAllocation")',
                    dataType: 'json',
                    beforeSend: function () {  },
                    data: { requestId: item.value, levelId: level, status: item.checked },
                    success: function (result) {
                        if (result.IsError === false) {
                            showNotification(result.Message, "success", "Success!");
                        } else {
                            showNotification(result.Message, "warning", "Attention!");
                        }
                    },
                    error: function (jqXHR) {
                        showNotification(jqXHR.statusText, "warning", "Attention!");
                    }
                });

                if (index == ($(".checkbox").length - 1)) {
                    
                    $("#btnSubmit").show();
                    $("#btnSave").show();

                    $("#btnLoading").hide();
                    $("#btnSaveProgress").hide();
                    $("#checkProgress").hide();

                }
            });

        }

    </script>
}

<div class="col-md-12">

        <div>
            @if (TempData["Message"] != null)
            {
                @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
            }
        </div>
        <div class="panel panel-default">
            <div class="panel-heading panel-dark-head">
                <h4>Hostel Allocation Requests</h4>
            </div>
            <div class="panel-body">

                @using (Html.BeginForm("ViewAllocationRequest", "HostelAllocation", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="col-md-12">

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Level.Name, new {@class = "control-label custom-text-black"})
                                    @Html.DropDownListFor(model => model.Level.Id, (IEnumerable<SelectListItem>) ViewBag.Level, new {@class = "form-control", @required = "required", id = "level"})
                                    @Html.ValidationMessageFor(model => model.Level.Id, null, new {@class = "text-danger"})
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Session.Name, "Session", new { @class = "control-label custom-text-black" })
                                    @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Sessions, new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-3">
                                    <input class="btn btn-success mr5" type="submit" onclick="showLoading()" name="submit" id="btnSubmit" value="Submit" />
                                    <button class="btn btn-success mr5" disabled="disabled" id="btnLoading" style="display: none"><img style="width: 10px; height: 10px" src="~/Content/Images/bx_loader.gif" /></button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="panel-body">
                @if (Model.HostelRequests != null && Model.HostelRequests.Count > 0)
                {
                    <div class="panel panel-danger">
                        <div class="panel-body table-responsive">
                            @using (Html.BeginForm("ApproveHostelrequest", "HostelAllocation", new { Area = "Admin" }, FormMethod.Post))
                            {

                                <table class="table-bordered table-hover table-striped table" id="requestTable">
                                    <thead>
                                        <tr>
                                            <th>
                                                Picture
                                            </th>
                                            <th>
                                                Name
                                            </th>
                                            <th>
                                                Gender
                                            </th>
                                            <th>
                                                Matric NO.
                                            </th>
                                            <th>
                                                State
                                            </th>
                                            <th>
                                                Address
                                            </th>
                                            <th>
                                                Programme
                                            </th>
                                            <th>
                                                Department
                                            </th>
                                            <th>
                                                <input type="checkbox" id="check_all" onclick="checkAll()" /> Approve
                                                <span id="checkProgress" style="display: none"><img style="width: 10px; height: 10px" src="~/Content/Images/bx_loader.gif" /></span>
                                            </th>
                                            @*<th></th>*@
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @for (int i = 0; i < Model.HostelRequests.Count; i++)
                                    {
                                        <tr>

                                            @Html.HiddenFor(model => model.HostelRequests[i].Id)
                                            @if (Model.HostelRequests[i].Student != null)
                                            {
                                                if (!string.IsNullOrEmpty(Model.HostelRequests[i].Student.ImageFileUrl))
                                                {
                                                    <td>
                                                        <img src="@Url.Content(@Model.HostelRequests[i].Student.ImageFileUrl)" class="img img-rounded" style="width: 200px; height: 200px" />

                                                    </td>
                                                }
                                                else
                                                {
                                                    <td>
                                                        <img src="@Url.Content("~/Content/Images/default_avatar.png")" class="img img-rounded" style="width: 200px; height: 200px" />

                                                    </td>
                                                }

                                                <td>
                                                    @Model.HostelRequests[i].Student.FullName.ToUpper()
                                                </td>
                                                if (Model.HostelRequests[i].Student.Sex != null && Model.HostelRequests[i].Student.Sex.Id > 0)
                                                {
                                                    <td>
                                                        @Model.HostelRequests[i].Student.Sex.Name
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                if (Model.HostelRequests[i].Student.MatricNumber != null)
                                                {
                                                    <td>
                                                        @Model.HostelRequests[i].Student.MatricNumber.ToUpper()
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                if (Model.HostelRequests[i].Student.State != null)
                                                {
                                                    <td>
                                                        @Model.HostelRequests[i].Student.State.Name.ToUpper()
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                <td>
                                                    @Model.HostelRequests[i].Student.SchoolContactAddress
                                                </td>
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Model.HostelRequests[i].Person.ImageFileUrl))
                                                {
                                                    <td>
                                                        <img src="@Url.Content(@Model.HostelRequests[i].Person.ImageFileUrl)" class="img img-rounded" style="width: 200px; height: 200px" />

                                                    </td>
                                                }
                                                else
                                                {
                                                    <td>
                                                        <img src="@Url.Content("~/Content/Images/default_avatar.png")" class="img img-rounded" style="width: 200px; height: 200px" />

                                                    </td>
                                                }

                                                <td>
                                                    @Model.HostelRequests[i].Person.FullName.ToUpper()
                                                </td>
                                                if (Model.HostelRequests[i].Person.Sex != null && Model.HostelRequests[i].Person.Sex.Id > 0)
                                                {
                                                    <td>
                                                        @Model.HostelRequests[i].Person.Sex.Name
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }
                                                <td></td>

                                                if (Model.HostelRequests[i].Person.State != null)
                                                {
                                                    <td>
                                                        @Model.HostelRequests[i].Person.State.Name.ToUpper()
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                                <td>
                                                    @Model.HostelRequests[i].Person.ContactAddress
                                                </td>
                                            }

                                            <td>
                                                @Model.HostelRequests[i].Programme.Name
                                            </td>
                                            <td>
                                                @Model.HostelRequests[i].Department.Name
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(m => m.HostelRequests[i].Approved, new {@type = "checkbox", @class = "checkbox", onclick="updateStatus(" + @Model.HostelRequests[i].Id + ")"})
                                                @*<input type="checkbox" value="@Model.HostelRequests[i].Id" class="checkbox" checked="@Model.HostelRequests[i].Approved" onclick="updateStatus(@Model.HostelRequests[i].Id)"/>*@
                                            </td>
                                            @*<td>
                                                <input type="button" value="Approve" class="btn btn-success mr5" onclick="approveRequest(@Model.HostelRequests[i].Id)"><i class="fa fa-check"> Approve</i><
                                            </td>*@
                                        </tr>
                                    }
                                    </tbody>
                                    
                                </table>
                                <br />
                                <div class="form-group">
                                    <div class=" col-md-10">
                                        <input type="submit" id="btnSave" value="Save" onclick="showSaveLoading()" class="btn btn-success"/>
                                        <button class="btn btn-success mr5" disabled="disabled" id="btnSaveProgress" style="display: none"><img style="width: 10px; height: 10px" src="~/Content/Images/bx_loader.gif" /></button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

        </div>
</div>

