@model Abundance_Nk.Web.Areas.Admin.ViewModels.ClearanceViewModel
@using System.Linq
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script src="~/Scripts/sweetalert.min.js"></script>
@*<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />*@

<script>

    function removeCriteria(id) {

        if (!id) {
            return;
        }

        swal({
             title: "Are you sure?",
             text: "This subject will no longer be available for this criteria!",
             type: "warning",
             showCancelButton: true,
             confirmButtonColor: "#f2b701",
             confirmButtonText: "Yes, delete it!",
             cancelButtonText: "No, cancel plx!",
             closeOnConfirm: false,
             closeOnCancel: false
         }, function (isConfirm) {
             if (isConfirm) {
                  $.ajax({
                      type: 'POST',
                      url: '@Url.Action("RemoveSubjectFromCriteria", "Clearance")',
                      dataType: 'json',
                      data: { id: id },
                      success: function (result) {
                        if (result.IsError == false) {
                            swal("Success", result.Message, "success");
                            window.location.reload();
                        }
                        else {
                            swal("Attention", result.Message, "error");
                        }
                      },
                      error: function (ex) {
                        swal("Attention", ex.statusText, "error");
                      }
                  });
             } else {
                 swal("Cancelled", "The delete action was cancelled.", "error");
             }
         });
         return false;
    }
    
</script>

@using (Html.BeginForm("EditCriteria", "Clearance", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div>

    </div>

    <div class="row">
        <h5>Choose Programme</h5>
        <hr style="margin-top:0" />
        <div class="col-md-12">


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.admissionCriteriaForOLevelSubject[0].MainCriteria.Programme.Id, new { @class = "control-label custom-text-black" })
                        @Html.DisplayFor(model => model.admissionCriteriaForOLevelSubject[0].MainCriteria.Programme.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.admissionCriteriaForOLevelSubject[0].MainCriteria.Programme.Id, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[0].Id)
                        @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[0].MainCriteria.Department.Id, new { @class = "control-label custom-text-black" })
                        @Html.DisplayFor(model => model.admissionCriteriaForOLevelSubject[0].MainCriteria.Department.Name, new { @class = "form-control" })
                         </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div id="divJambNo" class="form-group" style="display:none">

                    </div>
                </div>


            </div>
        </div>

    </div>
    <div>

        <div class="row" id="divOLevel" style="color:black">
            <div class="col-md-4">
                <h5>Main Subject</h5>
                <hr class="no-top-padding" />

                <table class="table table-condensed table-responsive" style="background-color:whitesmoke">
                    <tr>
                        <th>
                            Compulsory
                        </th>
                        <th>
                            Subject
                        </th>
                        <th>
                            Grade
                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.admissionCriteriaForOLevelSubject.Count() ; i++)
                    {
                        @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].MainCriteria.Id)
                        <tr>
                            <td>
                                @Html.CheckBoxFor(model => Model.admissionCriteriaForOLevelSubject[i].IsCompulsory, new { @class = "ckb3" }) &nbsp;
                                <span style="color: red" onclick="removeCriteria(@Model.admissionCriteriaForOLevelSubject[i].Id);"><i class="fa fa-remove"></i></span>
                            </td>
                            <td>
                                @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].Subject.Id, (IEnumerable<SelectListItem>)ViewData["FirstSittingOLevelSubjectId" + i], new { @class = "form-control olevel" })
                                @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].Id)
                            </td>
                            <td>
                                @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].MinimumGrade.Id, (IEnumerable<SelectListItem>)ViewData["FirstSittingOLevelGradeId" + i], new { @class = "form-control olevel" })
                               
                            </td>
                        </tr>
                    }

                </table>
            </div>

            <div class="col-md-4">
                <h5>Subject Alternative</h5>
                <hr class="no-top-padding"/>


                <table class="table table-condensed table-responsive" style="background-color: whitesmoke">
                    <tr>
                        <th>
                            Subject
                        </th>
                        <th>

                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.admissionCriteriaForOLevelSubject.Count(); i++)
                    {
                        if (Model.admissionCriteriaForOLevelSubject[i].Alternatives.Count > 0)
                        {
                            <tr>
                                <td>

                                    @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].Alternatives[0].OLevelSubject.Id, (IEnumerable<SelectListItem>) ViewData["SecondSittingOLevelSubjectId" + i], new {@class = "form-control olevel"})
                                    @*@Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].Alternatives[0].Id)*@
                                    @* @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].Alternatives[0].OLevelSubject.Name)*@
                                </td>
                                <td>

                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>

                                    @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].Alternatives[0].OLevelSubject.Id, (IEnumerable<SelectListItem>) ViewData["SecondSittingOLevelSubjectId" + i], new {@class = "form-control olevel"})
                                    @Html.HiddenFor(model => Model.admissionCriteriaForOLevelSubject[i].Id)

                                </td>
                                <td>

                                </td>
                            </tr>}
                    }

                </table>

            </div>


            <div class="col-md-4">
                <h5>Third Subject Alternative</h5>
                <hr class="no-top-padding" />

                <table class="table table-condensed table-responsive" style="background-color:whitesmoke">
                    <tr>
                        <th>
                            Subject
                        </th>
                        <th>

                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.admissionCriteriaForOLevelSubject.Count(); i++)
                    {
                        if (Model.admissionCriteriaForOLevelSubject[i].OtherAlternatives != null && Model.admissionCriteriaForOLevelSubject[i].OtherAlternatives.Count > 1)
                        {
                            <tr>
                                <td>

                                    @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].OtherAlternatives[0].OLevelSubject.Id, (IEnumerable<SelectListItem>)ViewData["OtherOLevelSubjectId" + i], new { @class = "form-control olevel" })
                                    @*@Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].Alternatives[0].Id)*@
                                    @* @Html.HiddenFor(model => model.admissionCriteriaForOLevelSubject[i].Alternatives[0].OLevelSubject.Name)*@
                                </td>
                                <td></td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>

                                    @Html.DropDownListFor(model => Model.admissionCriteriaForOLevelSubject[i].OtherAlternatives[0].OLevelSubject.Id, (IEnumerable<SelectListItem>)ViewData["OtherOLevelSubjectId" + i], new { @class = "form-control olevel" })
                                    @Html.HiddenFor(model => Model.admissionCriteriaForOLevelSubject[i].Id)

                                </td>
                                <td></td>
                            </tr>}
                    }

                </table>

            </div>
        </div>


    </div>
    <div>

        <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Update Criteria" />

    </div>
}