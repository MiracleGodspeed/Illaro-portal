@model Abundance_Nk.Web.Areas.Admin.ViewModels.SupportViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/Scripts/jquery-1.11.1.min.js"></script>
@*<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/style.default.css" rel="stylesheet" />
<link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />*@

<script type="text/javascript">
    //Session Drop down Selected change event
    function GetDeptOption() {
        
        $("#DeptOption").empty();
        $("#deptOptionDiv").hide();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetDepartmentOptions", "Support")', // Calling json method
            dataType: 'json',
            data: { ProgId: $("#Programme").val(), DeptId: $("#Department").val() },
            // Get Selected Country ID.
            success: function (departmentOptions) {

                $("#DeptOption").append('<option value="' + 0 + '"> -- Select -- </option>');

                $.each(departmentOptions, function (i, departmentOption) {
                    $("#DeptOption").append('<option value="' + departmentOption.Value + '">' + departmentOption.Text + '</option>');

                    $("#deptOptionDiv").show();
                });
            },
            error: function (ex) {
                alert('Failed to retrieve options.' + ex);
                $("#deptOptionDiv").hide();
            }
        });
        $("#deptOptionDiv").hide();
        //return false;
    }


    $(document).ready(function () {

        var deptOpt = $("#DeptOption").val();
        if (deptOpt != null) {
            $("#deptOptionDiv").show();
        } else {
            $("#deptOptionDiv").hide();
        }
        var selectedProgramme = $("#Programme").val();
        if (selectedProgramme !=1) {
            $("#ApplicantJambDetail_JambRegistrationNumber").hide();
            $('#ApplicantJambDetail_JambRegistrationNumber').val('');
        }
        else {
            $("#ApplicantJambDetail_JambRegistrationNumber").show();
        }

        $("#Programme").change(function () {

            var programme = $("#Programme").val();
            if ((programme == 1)) {
                $("#ApplicantJambDetail_JambRegistrationNumber").show();
           
            }
            else {
                $("#ApplicantJambDetail_JambRegistrationNumber").hide();
                $('#ApplicantJambDetail_JambRegistrationNumber').val('');
            }

            $("#Department").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentByProgrammeId")', // we are calling json method
                dataType: 'json',
                data: { id: programme },
                success: function (departments) {
                    $("#Department").append('<option value="' + 0 + '"> -- Select -- </option>');

                    $.each(departments, function (i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' + department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
        })

    })
</script>



<div class="col-md-10 ml-auto mr-auto" style="height: 82vh">

    <div class="alert alert-success fade in nomargin">
        <h3>@ViewBag.Title</h3>
    </div>


    <div class="card card-shadow">
        <div class="card-header">
            <p class="text-center"><h3>CORRECT INVOICE DETAILS</h3></p>
        </div>
        <div class="card-body">

            <div class="col-md-12">


                @if (TempData["Message"] != null)
            {
                    <div class="alert alert-success alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <strong>@TempData["Message"]</strong>
                    </div>
                }

                @using (Html.BeginForm("Index", "Support/Index", FormMethod.Post))
            {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)



                    <div class="row ">
                        <div class="col-md-12">
                            <div class="form-group">
                                <h4>Enter Invoice Number or Confirmation Order Number</h4>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.InvoiceNumber, new { @class = "col-sm-12 control-label " })
                                <div class="col-sm-12">
                                    @Html.TextBoxFor(model => model.InvoiceNumber, new { @class = "form-control", @placeholder = "Enter Invoice No" })
                                    @Html.ValidationMessageFor(model => model.InvoiceNumber, null, new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-sm-12">
                                    <input class="btn btn-success" type="submit" name="submit" id="submit" value="Search" />
                                    <div class="btn btn-default">
                                        @Html.ActionLink("Back to Home", "Index", "Home", new { Area = "" }, null)
                                    </div>
                                </div>
                            </div>
                        </div>

                        </div>

                }

                @if (Model == null || Model.Person == null || Model.Payment == null) { return; }

                @using (Html.BeginForm("UpdateInvoice", "Support", FormMethod.Post))
            {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    @Html.HiddenFor(model => model.Person.Id)
                    @Html.HiddenFor(model => model.Person.DateEntered)
                    @Html.HiddenFor(model => model.Person.DateOfBirth)
                    @Html.HiddenFor(model => model.Person.Type.Id)
                    @Html.HiddenFor(model => model.Person.Sex.Id)
                    @Html.HiddenFor(model => model.Person.State.Id)
                    @Html.HiddenFor(model => model.Person.Nationality.Id)
                    @Html.HiddenFor(model => model.Person.Type.Id)
                    @Html.HiddenFor(model => model.Person.LocalGovernment.Id)
                    @Html.HiddenFor(model => model.Person.Religion.Id)
                    @Html.HiddenFor(model => model.Person.Role.Id)

                    @Html.HiddenFor(model => model.Payment.Id)

                    @*@Html.HiddenFor(model => model.AppliedCourse.Person.Id)*@
                    @*@Html.HiddenFor(model => model.AppliedCourse.Option.Id)*@
                    @Html.HiddenFor(model => model.AppliedCourse.ApplicationForm.Id)
                    <div class="card card-default ">
                        <div class="card-body ">
                            <div class="col-md-12">
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Surname</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.Person.LastName, new { @class = "form-control", @placeholder = "Enter Surname" })
                                    @Html.ValidationMessageFor(model => model.Person.LastName)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">First Name</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.Person.FirstName, new { @class = "form-control", @placeholder = "Enter Firstname" })
                                    @Html.ValidationMessageFor(model => model.Person.FirstName)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Other Names</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.Person.OtherName, new { @class = "form-control", @placeholder = "Enter Other Names" })
                                    @Html.ValidationMessageFor(model => model.Person.OtherName)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Phone Number</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.Person.MobilePhone, new { @class = "form-control", @placeholder = "Enter Mobile Number" })
                                    @Html.ValidationMessageFor(model => model.Person.MobilePhone)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Email</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.Person.Email, new { @class = "form-control", @placeholder = "Enter Email address" })
                                    @Html.ValidationMessageFor(model => model.Person.Email)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Programme</label>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.AppliedCourse.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.ProgrammeId, new { @class = "form-control", @id = "Programme", @onchange = "GetDeptOption()" })
                                    @Html.ValidationMessageFor(model => model.AppliedCourse.Programme.Id)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12control-label">Department</label>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.AppliedCourse.Department.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentId, new { @class = "form-control", @id = "Department", @onchange = "GetDeptOption()" })
                                    @Html.ValidationMessageFor(model => model.AppliedCourse.Department.Id)
                                </div>
                            </div>

                            <div class="form-group" id="deptOptionDiv" style="display: none">
                                @Html.LabelFor(model => model.AppliedCourse.Option, "Department Option", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.AppliedCourse.Option.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentOptionId, new { @class = "form-control", @id = "DeptOption" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-md-12control-label">Jamb Reg Number</label>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(model => model.ApplicantJambDetail.JambRegistrationNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ApplicantJambDetail.JambRegistrationNumber)
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-sm-2"></div>
                                <div class="col-md-12">
                                    <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Update" />
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>

    </div>


</div>
