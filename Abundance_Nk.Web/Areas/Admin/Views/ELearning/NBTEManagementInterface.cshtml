

@model Abundance_Nk.Web.Areas.Admin.ViewModels.ELearningViewModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<style>
    #spinner {
        display: none
    }
 
</style>

<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="~/Scripts/file-upload/jquery-1.9.1.min.js"></script>
<script type="text/javascript" src="~/Scripts/file-upload/jquery-ui-1.9.2.min.js"></script>
<script type="text/javascript" src="~/Scripts/file-upload/jquery.fileupload-ui.js"></script>
<script type="text/javascript" src="~/Scripts/file-upload/jquery.fileupload.js"></script>
<script type="text/javascript" src="~/Scripts/file-upload/jquery.iframe-transport.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.print.js"></script>

<script type="text/javascript">
    var jqXHRData;
    $(document).ready(function () {

        $("#save_lecture").click(function () {
            $("#spinner").show();
            $("#save_lecture").hide();

            var topic = $("#lecture_topic").val()
            var date = $("#lecture_date").val()
            var time = $("#lecture_time").val()
            var duration = $("#lecture_duration").val()
            var course_allocation = $("#course_allocation").val()
            var agenda = $("#lecture_agenda").val()

            if (topic == null || date == null || time == null || duration == null || course_allocation == null) {
                alert("All fields are required!")
                return;
            }


            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateLiveLectures")', // we are calling json method
                dataType: 'json',
                data: { topic: topic, agenda: agenda, date: date, start_time: time, duration: duration, courseAllocationId: course_allocation },
                success: function (res) {
                    alert(res.message);
                    $("#spinner").hide();
                    $("#save_lecture").show();
                },
                error: function (ex) {
                    alert('Failed to create');
                    $("#spinner").hide();
                    $("#save_lecture").show();
                }
            });
        });



        $("#Programme_Id").change(function () {

            $("#Department_Id").empty();

            var selectedProgramme = $("#AdmissionListDetail_Form_ProgrammeFee_Programme_Id").val();
            var programme = $("#Programme_Id").val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentByProgrammeId")', // we are calling json method
                dataType: 'json',
                data: { id: programme },
                success: function (departments) {
                    $("#Department_Id").append('<option value="' + 0 + '"> -- Select -- </option>');

                    $.each(departments, function (i, department) {
                        $("#Department_Id").append('<option value="' + department.Value + '">' + department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
        });



        //Load Department Option
        $("#AdmissionListDetail_Deprtment_Id").change(function () {

            var department = $("#AdmissionListDetail_Deprtment_Id").val();
            var programme = $("#AdmissionListDetail_Form_ProgrammeFee_Programme_Id").val();

            $("#AdmissionListDetail_DepartmentOption_Id").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOptionByDepartment")', // we are calling json method
                dataType: 'json',
                data: { id: department, programmeid: programme },
                success: function (departmentOptions) {
                    //$("#hfDepartmentOptionExist").val(departmentOptions[0]);

                    if (departmentOptions == "" || departmentOptions == null || departmentOptions == undefined) {
                        $("#divDepartmentOption").hide();
                    }
                    else {
                        $("#AdmissionListDetail_DepartmentOption_Id").append('<option value="' + 0 + '"> -- Select -- </option>');
                        $.each(departmentOptions, function (i, Option) {
                            $("#AdmissionListDetail_DepartmentOption_Id").append('<option value="' + Option.Value + '">' + Option.Text + '</option>');
                        });
                        if (programme > 2) {
                            $("#divDepartmentOption").show();
                        }

                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve department Options.' + ex);
                }
            });

        })


})
</script>



<div class="alert alert-success fade in nomargin">
    <h3>@ViewBag.Title</h3>
</div>
<div class="row">
    <div class="col-md-12">
        @if (TempData["Message"] != null)
        {
            @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
        }
    </div>
</div>

<div class="col-md-10 ml-auto mr-auto" style="height: 81vh;">
    <div class="card card-shadow">
        <div class="card-header">
            <div class="row">
                <div class="col-md-8 pops">
                    <h4>Live Lecture Management</h4>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <button class="btn btn-primary mr5" data-toggle="modal" data-target="#myModal" type="button" name="submit" id="submit"><i class="fa fa-plus"></i> &nbsp; Create/Schedule a live lecture</button>
                    </div>
                </div>


            </div>


        </div>

        <!-- The Modal -->
        <div class="modal fade" id="myModal" style="z-index:9999">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Schedule a live lecture</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group text-black">
                                    <label class="label-control">Assigned Courses</label>
                                    @Html.DropDownListFor(model => model.CourseAllocation.Id, (IEnumerable<SelectListItem>)ViewBag.CourseAllocations, new { @class = "form-control", id = "course_allocation" })
                                    @Html.ValidationMessageFor(model => model.CourseAllocation.Id, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="label-control">Lecture topic</label>
                                    <input class="form-control" type="text" id="lecture_topic" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="label-control">Agenda</label>
                                    <input class="form-control" type="text" id="lecture_agenda" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="label-control">Scheduled date</label>
                                    <input class="form-control" type="date" id="lecture_date" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="label-control">Scheduled time</label>
                                    <input class="form-control" type="time" id="lecture_time" />
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="label-control">Duration (mins)</label>
                                    <input class="form-control" type="number" id="lecture_duration" />
                                </div>
                            </div>

                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4">
                                <button class="btn btn-primary" type="button" id="save_lecture"><i class="fa fa-save"></i> &nbsp; Save</button>
                            </div>
                            <div class="col-md-6" id="spinner">
                                <img src="~/Content/Images/bx_loader.gif" />
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
       
        
        <div class="card-body">

            <div class="col-md-12">
                @*@if (TempData["Message"] != null)
                    {
                        @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
                    }*@

                @using (Html.BeginForm("NBTEManagementInterface", "ELearning", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div class="col-md-12">
                        <div class="alert alert-info">
                            <p class="custom-text-black"> This interface presents the tutor or lecturer with a pool of his/her scheduled live lectures, according to the specified session and department. New live lectures can also be created/scheduled from this interface.</p>
                        </div>
                    </div>
                    <br />

                    <br />
                    <div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Session.Id, new { @class = "control-label custom-text-black" })
                                @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Programme.Id, new { @class = "control-label custom-text-black" })
                                @Html.DropDownListFor(model => model.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme_Id" })
                                @Html.ValidationMessageFor(model => model.Programme.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="row">

                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Department.Id, new { @class = "control-label custom-text-black" })
                                @Html.DropDownListFor(model => model.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, new { @class = "form-control", @id = "Department_Id" })
                                @Html.ValidationMessageFor(model => model.Department.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>



                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <i class="glyphicon-upload"></i><input class="btn btn-primary mr5" type="submit" name="submit" id="submit" value="View lecture schedule" />
                            </div>
                        </div>


                    </div>


                }

            </div>

            @*@if (Model == null || Model.OdFelStudentList == null) { return; }

                @if (Model != null && Model.OdFelStudentList != null)
                {*@
            <br />
            <br />
            @if (Model != null && Model.LiveLectures.Count > 0)
            {
                <div class="col-md-12">

                    <table class="table table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th>SN</th>
                                <th>Lecture Date</th>
                                <th>Topic of DIscussion</th>
                                <th>Date Created</th>
                                <th>Action</th>
                                @*<th>Programme</th>
                                    <th>Department</th>*@


                            </tr>
                        </thead>
                        <tbody style="color:black;">
                           
                            @for (var itemIndex = 0; itemIndex < Model.LiveLectures.Count; itemIndex++)
                            {
                                <tr>
                                   
                                    @{ int N = 0;}
                                    <td>@{ N = itemIndex + 1; } @N</td>
                                    <td>@Html.DisplayTextFor(m => m.LiveLectures[itemIndex].LectureDate)</td>
                                    <td>@Html.DisplayTextFor(m => m.LiveLectures[itemIndex].Topic)</td>
                                    <td>@Model.LiveLectures[itemIndex].DateCreated</td>
                                    <td>
                                        <a class="btn btn-primary btn-sm" href="@Model.LiveLectures[itemIndex].Start_Meeting_Url" target="_blank">Start Live Class</a>
                                        @*@Html.ActionLink("About this Website", "https://www.google.com/")*@
                                        <button class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>
                                        <button class="btn btn-warning btn-sm"><i class="fa fa-edit"></i></button>
                                    </td>

                                </tr>
                               

                            }

                        </tbody>
                    </table>

                </div>

            }

            @*}*@

        </div>


    </div>
</div>
