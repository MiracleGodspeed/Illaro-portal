@model Abundance_Nk.Web.Areas.Admin.ViewModels.StudentCourseRegistrationViewModel
@{
    ViewBag.Title = "EditStudentLevel";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<script src="~/Scripts/jquery-1.11.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {


        //Programme Drop down Selected-change event
        $("#Programme").change(function () {

            $("#Department").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartments", "StudentCourseRegistration")', // Calling json method
                dataType: 'json',
                data: { id: $("#Programme").val() },
                // Get Selected Country ID.
                success: function (departments) {
                    $("#Department").append('<option value="' + 0 + '">' +
                            '-- Select Department --' + '</option>');
                    $.each(departments, function (i, department) {
                        $("#Department").append('<option value="' + department.Value + '">' +
                             department.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve departments.' + ex);
                }
            });
            return false;
        });

        //Department Drop down Selected-change event
        $("#Department").change(function() {

            $("#DepartmentOption").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartmentOptions", "StudentCourseRegistration")', // Calling json method
                dataType: 'json',
                data: { progId: 3, DeptId: $("#Department").val() },

                success: function(departmentOptions) {

                    $("#Option").show();

                    $("#DepartmentOption").append('<option value="' + 0 + '">' +
                        '-- Select Department Option --' + '</option>');
                    $.each(departmentOptions, function(i, departmentOption) {
                        $("#DepartmentOption").append('<option value="' + departmentOption.Value + '">' +
                            departmentOption.Text + '</option>');
                    });
                },
                error: function(ex) {
                    alert('Failed to retrieve department options.' + ex);
                }
            });
            return false;
        });
    });
</script>

<div class="col-md-12">
    <div class="col-md-1"></div>
    <div class="col-md-10">

        <div>
            @if (TempData["Message"] != null)
            {
                @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
            }
        </div>

        <div class="panel panel-default">
            <div class="panel-heading panel-dark-head">
                <h4>Edit StudentLevel</h4>
            </div>
            <div class="panel-body">
                <div class="col-md-12">

                    @using (Html.BeginForm("EditStudentLevel", "StudentCourseRegistration", FormMethod.Post))
                    {
                        @Html.HiddenFor(model => model.StudentLevel.Id)


                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StudentLevel.Level.Name, "Level", new { @class = "control-label col-sm-2" })
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.StudentLevel.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Level, new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.StudentLevel.Level.Id, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.StudentLevel.Session.Name, "Session", new { @class = "control-label col-sm-2" })
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.StudentLevel.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Session, new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.StudentLevel.Session.Id, null, new { @class = "text-danger" })
                                </div>
                            </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StudentLevel.Programme.Name, "Programme", new { @class = "col-sm-2 control-label " })
                                    <div class="col-sm-10">
                                        @Html.DropDownListFor(model => model.StudentLevel.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programme, new { @class = "form-control", @id = "Programme", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.StudentLevel.Programme.Id, null, new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StudentLevel.Department.Name, "Department", new { @class = "col-sm-2 control-label " })
                                    <div class="col-sm-10">
                                        @Html.DropDownListFor(model => model.StudentLevel.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Department, new { @class = "form-control", @id = "Department", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.StudentLevel.Department.Id, null, new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.OptionId, "DepartmentOption", new { @class = "col-sm-2 control-label " })
                                    <div class="col-sm-10">
                                        @Html.DropDownListFor(model => model.OptionId, (IEnumerable<SelectListItem>)ViewBag.DepartmentOption, new { @class = "form-control", @id = "DepartmentOption" })
                                        @Html.ValidationMessageFor(model => model.OptionId, null, new { @class = "text-danger" })
                                    </div>

                                </div>
                            
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-offset-2">
                                    <input class="btn btn-success mr5" type="submit" name="submit" id="submit" value="Update" />
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>

    </div>
    <div class="col-md-1"></div>
</div>
