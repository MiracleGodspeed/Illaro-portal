@model Abundance_Nk.Web.Areas.Admin.ViewModels.HostelViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section Scripts {

<link href="~/Content/jquery-ui-1.10.3.css" rel="stylesheet" />

    @Scripts.Render("~/bundles/jquery")

    <script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/file-upload/jquery-ui-1.9.2.min.js"></script>

    <script type="text/javascript">

        //1 = hostel, 2 = hostelType, 3 = hostelSeries

        var hostelDataTable;
        var hostelTypeDataTable;
        var hostelSeriesDataTable;

        $(document).ready(function() {

            $('link[rel=stylesheet][href~="/Content/sbCss/bootstrap.min.css"]').remove();

            $(".load").hide();

            PopulateSetupTables(1, null);
            PopulateSetupTables(2, null);
            //PopulateSetupTables(3);

            $(function () {
                $("#dateAddedCreate").datepicker({
                    changeMonth: true,
                    changeYear: true
                });
               $("#dateAddedCreate").datepicker("option", "showAnim", "slide");
           });

            });

        function populateHostelSeries() {

            if (hostelSeriesDataTable == undefined) {
                //Do nothing
            } else {
                hostelSeriesDataTable.destroy();
            }

            var hostel = $("#selectedHostel").val();
            PopulateSetupTables(3, hostel);
        }

        $('#selectedHostel').change(function () {

            if (hostelSeriesDataTable == undefined) {
                //Do nothing
            } else {
                hostelSeriesDataTable.destroy();
            }

            var hostel = $("#selectedHostel").val();
            PopulateSetupTables(3, hostel);
        });


        function showCreateModal(tableId) {

            hideControls();

            switch (tableId) {
                case 1:
                    $("#createHostelHeader").show();
                    $("#btnCreateHostel").show();
                    $("#nameTextBox").show();
                    $("#descriptionTextBox").show();
                    $("#hostelCapacityTextBox").show();
                    $("#dateAddedTextBox").show();
                    $("#activatedTextBox").show();
                    $("#hostelTypeSelectTextBox").show();
                    break;
                case 2:
                    $("#createHostelTypeHeader").show();
                    $("#btnCreateHostelType").show();
                    $("#nameTextBox").show();
                    $("#descriptionTextBox").show();
                    break;
                case 3:
                    $("#createHostelSeriesHeader").show();
                    $("#btnCreateHostelSeries").show();
                    $("#nameTextBox").show();
                    $("#hostelSelectTextBox").show();
                    $("#activatedTextBox").show();
                    break;

                default:
                    break;
            }

            $('#setupModal').modal('show');
        }

        function hideControls() {

            $("#createHostelHeader").hide();
            $("#editHostelHeader").hide();
            $("#createHostelTypeHeader").hide();
            $("#editHostelTypeHeader").hide();
            $("#createHostelSeriesHeader").hide();
            $("#editHostelSeriesHeader").hide();
           
            $("#idTextBox").hide();
            $("#nameTextBox").hide();
            $("#descriptionTextBox").hide();
            $("#hostelCapacityTextBox").hide();
            $("#dateAddedTextBox").hide();
            $("#activatedTextBox").hide();
            $("#hostelTypeSelectTextBox").hide();
            $("#hostelSelectTextBox").hide();
           
            $("#btnCreateHostel").hide();
            $("#btnSaveHostel").hide();
            $("#btnCreateHostelType").hide();
            $("#btnSaveHostelType").hide();
            $("#btnCreateHostelSeries").hide();
            $("#btnSaveHostelSeries").hide();
           
        }

        function createRecord(tableType) {
            if (tableType != null && tableType > 0) {

                var valueArray = populateRecords();
                var myJson = JSON.stringify(valueArray);

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateRecord")',
                    dataType: 'json',
                    data: { tableType: tableType, myRecordArray: myJson },
                    beforeSend: function () {
                        $(".load").show();
                    },
                    complete: function () {
                        $(".load").hide();
                    },
                    success: function (result) {
                        if (result.IsError === false) {

                            alert('Record created successfully');

                            switch (tableType) {
                                case 1:
                                    hostelDataTable.destroy();
                                    break;
                                case 2:
                                    hostelTypeDataTable.destroy();
                                    break;
                                case 3:
                                    if (hostelSeriesDataTable == undefined) {
                                        //do nothing
                                    } else {
                                        hostelSeriesDataTable.destroy();
                                    }
                                    break;
                                default:
                                    break;
                            }

                            $('#setupModal').modal('hide');
                            if (tableType === 3) {

                                var hostel = $('#selectedHostel').val();
                                if (hostel === "") {
                                    //do nothing
                                } else {
                                    PopulateSetupTables(tableType, hostel);
                                }
                            } else {
                                PopulateSetupTables(tableType, null);
                            }

                        } else {
                            alert(result.Message);
                        }
                    },
                    error: function (ex) {
                        alert('Create failed.' + ex);
                    }
                });

            }
        }
        function editRecord(id, tableType) {
            if (tableType != null && tableType > 0) {

                var valueArray = populateRecords();
                var myJson = JSON.stringify(valueArray);

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditRecord")',
                    dataType: 'json',
                    data: { tableType: tableType, recordId: id, myRecordArray: myJson, action: "edit" },
                    beforeSend: function () {
                        $(".load").show();
                    },
                    complete: function () {
                        $(".load").hide();
                    },
                    success: function (result) {
                        if (result.IsError === false) {

                            hideControls();

                            $("#idEdit").val(result.Id);
                            $("#idEdit").attr("readonly", "readonly");
                            $("#idTextBox").show();

                            switch (tableType) {
                                case 1:
                                    $("#nameCreate").val(result.Name);
                                    $("#descriptionCreate").val(result.Description);
                                    $("#hostelCapacityCreate").val(result.Capacity);
                                    $("#dateAddedCreate").val(result.Date);
                                    if (result.Activated === "True") {
                                        $("#activatedCreate").prop('checked', true);
                                    } else {
                                        $("#activatedCreate").prop('checked', false);
                                    }

                                    $("#hostelTypeSelectCreate").val(result.HostelType);

                                    $("#editHostelHeader").show();
                                    $("#btnSaveHostel").show();
                                    $("#nameTextBox").show();
                                    $("#descriptionTextBox").show();
                                    $("#hostelCapacityTextBox").show();
                                    $("#dateAddedTextBox").show();
                                    $("#activatedTextBox").show();
                                    $("#hostelTypeSelectTextBox").show();

                                    break;
                                case 2:
                                    $("#nameCreate").val(result.Name);
                                    $("#descriptionCreate").val(result.Description);

                                    $("#editHostelTypeHeader").show();
                                    $("#btnSaveHostelType").show();
                                    $("#nameTextBox").show();
                                    $("#descriptionTextBox").show();
                                    break;
                                case 3:
                                    $("#nameCreate").val(result.Name);
                                    $("#hostelSelectCreate").val(result.Hostel);
                                    if (result.Activated === "True") {
                                        $("#activatedCreate").prop('checked', true);
                                    } else {
                                        $("#activatedCreate").prop('checked', false);
                                    }

                                    $("#editHostelSeriesHeader").show();
                                    $("#btnSaveHostelSeries").show();
                                    $("#nameTextBox").show();
                                    $("#hostelSelectTextBox").show();
                                    $("#activatedTextBox").show();
                                    break;
                                default:
                                    break;
                            }

                            $('#setupModal').modal('show');
                        } else {
                            alert(result.Message);
                        }
                    },
                    error: function (ex) {
                        alert('Edit failed.' + ex);
                    }
                });

            }
        }

        function saveRecord(tableType) {
            if (tableType != null && tableType > 0) {

                var valueArray = populateRecords();
                var myJson = JSON.stringify(valueArray);
                var id = 0;

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditRecord")',
                    dataType: 'json',
                    data: { tableType: tableType, recordId: id, myRecordArray: myJson, action: "save" },
                    beforeSend: function () {
                        $(".load").show();
                    },
                    complete: function () {
                        $(".load").hide();
                    },
                    success: function (result) {
                        if (result.IsError === false) {

                            alert(result.Message);

                            switch (tableType) {
                                case 1:
                                    hostelDataTable.destroy();
                                    break;
                                case 2:
                                    hostelTypeDataTable.destroy();
                                    break;
                                case 3:
                                    if (hostelSeriesDataTable == undefined) {
                                        //do nothing
                                    } else {
                                        hostelSeriesDataTable.destroy();
                                    }
                                    break;
                                default:
                                    break;
                            }

                            $('#setupModal').modal('hide');
                            if (tableType === 3) {
                                var hostel = $('#selectedHostel').val();
                                if (hostel === "") {
                                    //do nothing
                                } else {
                                    PopulateSetupTables(tableType, hostel);
                                }
                            } else {
                                PopulateSetupTables(tableType, null);
                            }
                        } else {
                            alert(result.Message);
                        }
                    },
                    error: function (ex) {
                        alert('Save operation failed.' + ex);
                    }
                });

            }
        }

        function deleteRecord(id, tableType) {
            if (tableType != null && tableType > 0) {

                var deleteConfirmation = confirm("Confirm Delete!");

                if (deleteConfirmation === true) {

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteRecord")',
                        dataType: 'json',
                        data: { tableType: tableType, recordId: id },
                        beforeSend: function () {
                            $(".load").show();
                        },
                        complete: function () {
                            $(".load").hide();
                        },
                        success: function (result) {
                            if (result.IsError === false) {

                                alert('Record was deleted.');

                                switch (tableType) {
                                    case 1:
                                        hostelDataTable.destroy();
                                        break;
                                    case 2:
                                        hostelTypeDataTable.destroy();
                                        break;
                                    case 3:
                                        if (hostelSeriesDataTable == undefined) {
                                            //do nothing
                                        } else {
                                            hostelSeriesDataTable.destroy();
                                        }
                                        break;
                                    default:
                                        break;
                                }

                                if (tableType === 3) {
                                    var hostel = $('#selectedHostel').val();
                                    if (hostel === "") {
                                        //do nothing
                                    } else {
                                        PopulateSetupTables(tableType, hostel);
                                    }
                                } else {
                                    PopulateSetupTables(tableType, null);
                                }
                            } else {
                                alert(result.Message);
                            }
                        },
                        error: function (ex) {
                            alert('Delete failed.' + ex);
                        }
                    });
                }
            } else {
                alert('Parameter was not set!');
            }
        }

        function populateRecords() {
            var checked;
            if ($("#activatedCreate").is(':checked')) {
                checked = "true";
            } else {
                checked = "false";
            }
            
            var valueArray = { "id": $("#idEdit").val(), "Capacity": $("#hostelCapacityCreate").val(), "Name": $("#nameCreate").val(), "Description": $("#descriptionCreate").val(), "Date": $("#dateAddedCreate").val(), "Activated": checked, "HostelType": $("#hostelTypeSelectCreate").val(), "Hostel": $("#hostelSelectCreate").val() };

            return valueArray;
        }

        function PopulateSetupTables(setupTableType, setupHostel) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("PopulateSetupTables", "Hostel")',
                traditional: true,
                data: { tableType: setupTableType, hostel: setupHostel },
                beforeSend: function () {
                    $(".load").show();
                },
                complete: function () {
                    $(".load").hide();
                },
                success: function (result) {
                    if (result[0] != undefined && result[0].IsError === false) {
                        var i;
                        switch (setupTableType) {
                            case 1:

                                $("#hostel").empty();

                                for (i = 0; i < result.length; i++) {
                                    result[i].index = result[i].Id;
                                    $("#hostel").append('<tr><td>' + result[i].Name + '</td>' + '<td>' + result[i].Capacity + '</td>' + '<td>' + result[i].Description + '</td>' + '<td>' + result[i].Date + '</td>' + '<td>' + result[i].Activated + '</td>' + '<td>' + result[i].HostelTypeName + '</td>' + ' <td><input onclick="editRecord(' + result[i].Id + ', 1)" class="btn btn-sm btn-success editTableRow" value="Edit" type="button" /></td>' + ' <td><input onclick="deleteRecord(' + result[i].Id + ', 1)" class="btn btn-sm btn-success removeTableRow" value="Delete" type="button" /></td></tr>');

                                }

                                hostelDataTable = $('#hostelTable').DataTable();
                                break;
                            case 2:

                                $("#hostelType").empty();

                                for (i = 0; i < result.length; i++) {
                                    result[i].index = result[i].Id;
                                    $("#hostelType").append('<tr><td>' + result[i].Name + '</td>' + '<td>' + result[i].Description + '</td>' + '<td><input onclick="editRecord(' + result[i].Id + ', 2)" class="btn btn-sm btn-success editTableRow" value="Edit" type="button" /></td>' + ' <td><input onclick="deleteRecord(' + result[i].Id + ', 2)" class="btn btn-sm btn-success removeTableRow" value="Delete" type="button" /></td></tr>');

                                }

                                hostelTypeDataTable = $('#hostelTypeTable').DataTable();
                                break;
                            case 3:

                                $("#hostelSeries").empty();

                                for (i = 0; i < result.length; i++) {
                                    result[i].index = result[i].Id;
                                    $("#hostelSeries").append('<tr><td>' + result[i].Name + '</td>' + '<td>' + result[i].HostelName + '</td>' + '<td>' + result[i].Activated + '</td>' + '<td><input onclick="editRecord(' + result[i].Id + ', 3)" class="btn btn-sm btn-success editTableRow" value="Edit" type="button" /></td>' + ' <td><input onclick="deleteRecord(' + result[i].Id + ', 3)" class="btn btn-sm btn-success removeTableRow" value="Delete" type="button" /></td></tr>');

                                }

                                hostelSeriesDataTable = $('#hostelSeriesTable').DataTable();
                                break;
                            default:
                                break;
                        }

                    } else {
                        alert(result.Message);
                    }
                },
                error: function (ex) {
                    alert('Operation Failed.' + ex);
                }
            });
        }

        $('button').on('click', function () {
            var color = $(this).data('color');
            if (color != undefined) {
                $('#createModal .modal-content').removeAttr('class').addClass('modal-content modal-col-' + color);
                $('.modal-content').attr("opacity", "0.9 !important");
            }


        });

        $('#setupModal').on('hidden.bs.modal', function() {
            $('.modal-body').find("input, textarea, select").val('').end();
            $('#activatedCreate').prop('checked', false);
        });

    </script>

}

<div class="col-md-12">

    <div>
        @if (TempData["Message"] != null)
        {
            @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
        }
    </div>

    <div class="col-md-12">

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading panel-dark-head">
                    <h4>Hostels</h4>
                </div>
                <div class="panel-body">

                    <table class="table table-striped table-hover" id="hostelTable">
                        <thead>
                        <tr>
                            <th>Name</th>
                            <th>Capacity</th>
                            <th>Description</th>
                            <th>Date Added</th>
                            <th>Activated</th>
                            <th>Hostel Type</th>
                            <th></th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody id="hostel"></tbody>
                    </table>
                    <button data-color="green" id="btnHostelCreate" class="btn btn-success" onclick="showCreateModal(1)"><i class="fa fa-plus"> Add</i></button>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading panel-dark-head">
                    <h4>Hostel Types</h4>
                </div>
                <div class="panel-body">

                    <table class="table table-striped table-hover" id="hostelTypeTable">
                        <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th></th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody id="hostelType"></tbody>
                    </table>
                    <button data-color="green" id="btnHostelTypeCreate" class="btn btn-success" onclick="showCreateModal(2)"><i class="fa fa-plus"> Add</i></button>
                </div>
            </div><br/>
            <div class="panel panel-default">
                <div class="panel-heading panel-dark-head">
                    <h4>Hostel Series</h4>
                </div>
                <div class="panel-body">
                    @*<div style="text-align: center"><span><input type="text" id="selectedHostel" name="selectedHostel" placeholder="Hostel" /> &nbsp; <button onclick="populateHostelSeries()" class="btn btn-success"> Populate</button></span></div>*@
                    <div style="text-align: center"><span>@Html.DropDownListFor(m => m.Hostel.Id, (IEnumerable<SelectListItem>)ViewBag.Hostels, new { @class = "form-control", id = "selectedHostel" })</span></div>
                    <table class="table table-striped table-hover" id="hostelSeriesTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Hostel</th>
                                <th>Activated</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="hostelSeries"></tbody>
                    </table>
                    <button data-color="green" id="btnHostelSeriesCreate" class="btn btn-success" onclick="showCreateModal(3)"><i class="fa fa-plus"> Add</i></button>
                </div>
            </div>
        </div>

    </div>

    @*<div class="col-md-12">
            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading panel-dark-head">
                        <h4>Hostel Series</h4>
                    </div>
                    <div class="panel-body">
                        <div style="text-align: center"><span>@Html.DropDownListFor(m => m.Hostel.Id, (IEnumerable<SelectListItem>)ViewBag.Hostels, new { @class = "form-control", id = "selectedHostel" })</span></div>
                        <table class="table table-striped table-hover" id="hostelSeriesTable">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Hostel</th>
                                    <th>Activated</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="hostelSeries"></tbody>
                        </table>
                        <button data-color="green" id="btnHostelSeriesCreate" class="btn btn-success" onclick="showCreateModal(3)"><i class="fa fa-plus"> Add</i></button>
                    </div>
                </div>
            </div>

        </div>*@

</div>

<div class="modal fade" role="dialog" id="setupModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 style="display: none" id="createHostelHeader" class="modal-title">Create Hostel</h4>
                <h4 style="display: none" id="editHostelHeader" class="modal-title">Edit Hostel</h4>
                <h4 style="display: none" id="createHostelTypeHeader" class="modal-title">Create Hostel-Type</h4>
                <h4 style="display: none" id="editHostelTypeHeader" class="modal-title">Edit Hostel-Type</h4>
                <h4 style="display: none" id="createHostelSeriesHeader" class="modal-title">Create Hostel-Series</h4>
                <h4 style="display: none" id="editHostelSeriesHeader" class="modal-title">Edit Hostel-Series</h4>
            </div>
            <div class="modal-body">
                <div class="form-group" style="display: none" id="idTextBox">
                    @Html.LabelFor(model => model.Id, "ID:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Id, new { @class = "form-control", id = "idEdit" })
                    @Html.ValidationMessageFor(model => model.Id)
                </div>
                <div class="form-group" style="display: none" id="nameTextBox">
                    @Html.LabelFor(model => model.Hostel.Name, "Name:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Hostel.Name, new { @class = "form-control", id = "nameCreate" })
                    @Html.ValidationMessageFor(model => model.Hostel.Name)
                </div>
                <div class="form-group" style="display: none" id="hostelCapacityTextBox">
                    @Html.LabelFor(model => model.Hostel.Capacity, "Hostel Capacity:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Hostel.Capacity, new { @class = "form-control", id = "hostelCapacityCreate" })
                    @Html.ValidationMessageFor(model => model.Hostel.Capacity)
                </div>
                <div class="form-group" style="display: none" id="descriptionTextBox">
                    @Html.LabelFor(model => model.Hostel.Description, "Description:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Hostel.Description, new { @class = "form-control", id = "descriptionCreate" })
                    @Html.ValidationMessageFor(model => model.Hostel.Description)
                </div>
                <div class="form-group" style="display: none" id="dateAddedTextBox">
                    @Html.LabelFor(model => model.Hostel.DateEntered, "Date Added:", new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Hostel.DateEntered, new { @class = "form-control", id = "dateAddedCreate" })
                    @Html.ValidationMessageFor(model => model.Hostel.DateEntered)
                </div>
                
                <div class="form-group" style="display: none" id="hostelTypeSelectTextBox">
                    @Html.LabelFor(model => model.Hostel.HostelType.Hostel_Type_Id, "Hostel Type:", new {@class = "control-label"})
                    @Html.DropDownListFor(model => model.Hostel.HostelType.Hostel_Type_Id, (IEnumerable<SelectListItem>) ViewBag.HostelTypes, new {@class = "form-control", id = "hostelTypeSelectCreate"})
                    @Html.ValidationMessageFor(model => model.Hostel.HostelType.Hostel_Type_Id)
                </div>
                <div class="form-group" style="display: none" id="hostelSelectTextBox">
                    @Html.LabelFor(model => model.Hostel.Id, "Hostel:", new {@class = "control-label"})
                    @Html.DropDownListFor(model => model.Hostel.Id, (IEnumerable<SelectListItem>) ViewBag.Hostels, new {@class = "form-control", id = "hostelSelectCreate"})
                    @Html.ValidationMessageFor(model => model.Hostel.Id)
                </div>
                <div class="form-group" style="display: none" id="activatedTextBox">
                    @Html.LabelFor(model => model.Hostel.Activated, "Activated:", new {@class = "control-label"})
                    @Html.CheckBoxFor(model => model.Hostel.Activated, new { @class = "form-control", id = "activatedCreate" })
                    @Html.ValidationMessageFor(model => model.Hostel.Activated)
                </div>

                </div>

            </div>
            <div class="modal-footer form-group">
                <span style="display: none" class="load"><img src="~/Content/Images/bx_loader.gif" /></span>

                <button style="display: none" type="button" id="btnCreateHostel" class="btn btn-success" onclick="createRecord(1)">Create Hostel</button>

                <button style="display: none" type="button" id="btnSaveHostel" class="btn btn-success" onclick="saveRecord(1)">Save Hostel</button>

                <button style="display: none" type="button" id="btnCreateHostelType" class="btn btn-success" onclick="createRecord(2)">Create Hostel-Type</button>

                <button style="display: none" type="button" id="btnSaveHostelType" class="btn btn-success" onclick="saveRecord(2)">Save Hostel-Type</button>

                <button style="display: none" type="button" id="btnCreateHostelSeries" class="btn btn-success" onclick="createRecord(3)">Create Hostel-Series</button>

                <button style="display: none" type="button" id="btnSaveHostelSeries" class="btn btn-success" onclick="saveRecord(3)">Save Hostel-Series</button>

                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>



