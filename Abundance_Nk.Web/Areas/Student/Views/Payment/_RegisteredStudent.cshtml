@model Abundance_Nk.Web.Areas.Student.ViewModels.PaymentViewModel

<div class="panel panel-default">
    <div class="panel-body">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <div class="row">
                <div>
                    @if (TempData["Message"] != null)
                    {
                        @Html.Partial("_Message", (Abundance_Nk.Model.Model.Message)TempData["Message"])
                    }
                </div>
            </div>

            <div class="row">
                <h3>Choose Programme</h3>
                <hr style="margin-top:0" />
                <div class="col-md-12">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">

                                @Html.LabelFor(model => model.Session.Id, new { @class = "control-label " })
                                @Html.DropDownListFor(model => model.Session.Id, (IEnumerable<SelectListItem>)ViewBag.Sessions, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Session.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.StudentLevel.Programme.Id)
                                @Html.LabelFor(model => model.StudentLevel.Programme.Id, new { @class = "control-label " })
                                @Html.DropDownListFor(model => model.StudentLevel.Programme.Id, (IEnumerable<SelectListItem>)ViewBag.Programmes, new { @class = "form-control", disabled = true })
                                @Html.ValidationMessageFor(model => model.StudentLevel.Programme.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.HiddenFor(model => model.StudentLevel.Department.Id)
                                @Html.LabelFor(model => model.StudentLevel.Department.Id, "Course", new { @class = "control-label " })
                                @Html.DropDownListFor(model => model.StudentLevel.Department.Id, (IEnumerable<SelectListItem>)ViewBag.Departments, new { @class = "form-control", disabled = true })
                                @Html.ValidationMessageFor(model => model.StudentLevel.Department.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div id="divDepartmentOption" class="form-group" style="display:none">
                                @if (Model.StudentLevel.DepartmentOption != null && Model.StudentLevel.DepartmentOption.Id > 0)
                                {
                                    @Html.HiddenFor(model => model.StudentLevel.DepartmentOption.Id)
                                }

                                @Html.LabelFor(model => model.StudentLevel.DepartmentOption.Id, "Course Option", new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.StudentLevel.DepartmentOption.Id, (IEnumerable<SelectListItem>)ViewBag.DepartmentOptions, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StudentLevel.DepartmentOption.Id, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <br />

            <div class="row">
                <h3>Please enter other personal details</h3>
                <hr style="margin-top:0" />

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Person.LastName)
                        @Html.LabelFor(model => model.Person.LastName, new { @class = "control-label " })
                        @Html.TextBoxFor(model => model.Person.LastName, new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.Person.LastName, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Person.FirstName)
                        @Html.LabelFor(model => model.Person.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Person.FirstName, new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.Person.FirstName, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Person.OtherName)
                        @Html.LabelFor(model => model.Person.OtherName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Person.OtherName, new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.Person.OtherName, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Student.MatricNumber)
                        @Html.LabelFor(model => model.Student.MatricNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Student.MatricNumber, new { @class = "form-control", required = "required", disabled = true })
                        @Html.ValidationMessageFor(model => model.Student.MatricNumber, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Person.State.Id)
                        @Html.LabelFor(model => model.Person.State.Id, new { @class = "control-label " })
                        @Html.DropDownListFor(model => model.Person.State.Id, (IEnumerable<SelectListItem>)ViewBag.States, new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.Person.State.Id, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.Person.Email)
                        @Html.LabelFor(model => model.Person.Email, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Person.Email, new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.Person.Email, null, new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Person.MobilePhone, new { @class = "control-label" })
                        @if (Model.Person.MobilePhone == null)
                        {
                            @Html.TextBoxFor(model => model.Person.MobilePhone, new { @class = "form-control" })

                        }
                        else
                        {
                            @Html.HiddenFor(model => model.Person.MobilePhone)
                            @Html.TextBoxFor(model => model.Person.MobilePhone, new { @class = "form-control", disabled = true })

                        }
                        @Html.ValidationMessageFor(model => model.Person.MobilePhone, null, new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.StudentLevel != null && (Model.StudentLevel.Programme.Id == 8 || Model.StudentLevel.Programme.Id == 9))
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StudentLevel.Level.Id, new { @class = "control-label " })
                            @Html.DropDownListFor(model => model.StudentLevel.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Levels, new { @class = "form-control", disabled = true })
                            @Html.ValidationMessageFor(model => model.StudentLevel.Level.Id, null, new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StudentLevel.Level.Id, new { @class = "control-label " })
                            @Html.DropDownListFor(model => model.StudentLevel.Level.Id, (IEnumerable<SelectListItem>)ViewBag.Levels, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentLevel.Level.Id, null, new { @class = "text-danger" })
                        </div>
                    </div>
                }

            </div>



            @if (Model.StudentLevel != null && (Model.StudentLevel.Programme.Id == 8 || Model.StudentLevel.Programme.Id == 9))
            {
                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Payment Mode</label>
                            @Html.DropDownListFor(model => model.PaymentMode.Id, (IEnumerable<SelectListItem>)ViewBag.PaymentModeId, new { @class = "form-control", @Id="paymentModeDD" })
                            @Html.ValidationMessageFor(model => model.PaymentMode.Id, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Include Robotic?</label>
                            @Html.DropDownListFor(model => model.IncludeRoboticFee, (IEnumerable<SelectListItem>)ViewBag.OptionItems, new { @class = "form-control",@required=true})
                            @Html.ValidationMessageFor(model => model.IncludeRoboticFee, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Include CISCO?</label>
                            @Html.DropDownListFor(model => model.IncludeCISCOFee, (IEnumerable<SelectListItem>)ViewBag.OptionItems, new { @class = "form-control", @required = true })
                            @Html.ValidationMessageFor(model => model.IncludeCISCOFee, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Regenerate Invoice?</label>
                            @Html.DropDownListFor(model => model.RegenerateInvoice, (IEnumerable<SelectListItem>)ViewBag.OptionItems, new { @class = "form-control", @required = true })
                            @Html.ValidationMessageFor(model => model.RegenerateInvoice, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            




        </div>

    </div>

    <div class="col-md-1"></div>
</div>

